{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\binel\\\\OneDrive\\\\Desktop\\\\iProfiler\\\\src\\\\App.js\";\nimport React, { Component } from 'react';\nimport Navigation from './components/Navigation/Navigation';\nimport Login from './components/Login/Login';\nimport Register from './components/Register/Register';\nimport Logo from './components/Logo/Logo';\nimport ImageLinkForm from './components/ImageLinkForm/ImageLinkForm';\nimport Rank from './components/Rank/Rank';\nimport FaceRecognition from './components/FaceRecognition/FaceRecognition';\nimport './App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass App extends Component {\n  constructor() {\n    super();\n\n    this.loadUser = data => {\n      this.setState({\n        user: {\n          id: data.id,\n          name: data.name,\n          email: data.email,\n          entries: data.entries,\n          joined: data.joined\n        }\n      });\n    };\n\n    this.calculateFaceLocation = data => {\n      const faces = [];\n      const image = document.getElementById(\"inputimage\");\n      const width = Number(image.width);\n      const height = Number(image.height);\n\n      for (let i = 0; i < JSON.parse(data).outputs[0].data.regions.length; i++) {\n        const clarifaiFace = JSON.parse(data).outputs[0].data.regions[i].region_info.bounding_box;\n        faces.push({\n          leftCol: clarifaiFace.left_col * width,\n          topRow: clarifaiFace.top_row * height,\n          rightCol: width - clarifaiFace.right_col * width,\n          bottomRow: height - clarifaiFace.bottom_row * height\n        });\n      }\n\n      return faces;\n    };\n\n    this.displayFaceBox = box => {\n      this.setState({\n        box: box\n      });\n    };\n\n    this.onInputChange = event => {\n      this.setState({\n        input: event.target.value\n      });\n    };\n\n    this.onButtonSubmit = () => {\n      const raw = JSON.stringify({\n        \"user_app_id\": {\n          \"user_id\": \"binray\",\n          \"app_id\": \"iProfiler\"\n        },\n        \"inputs\": [{\n          \"data\": {\n            \"image\": {\n              \"url\": this.state.input\n            }\n          }\n        }]\n      });\n      const requestOptions = {\n        method: \"POST\",\n        headers: {\n          Accept: \"application/json\",\n          Authorization: 'Key a13ffff405e243a99bde0d98a85e6170'\n        },\n        body: raw\n      };\n      fetch(\"https://api.clarifai.com/v2/models/face-detection/versions/45fb9a671625463fa646c3523a3087d5/outputs\", requestOptions).then(response => response.text()).then(response => {\n        if (response) {\n          fetch('http://localhost:3000/image', {\n            method: 'PUT',\n            headers: {\n              'Content-Type': 'application/json'\n            },\n            body: JSON.stringify({\n              \"id\": this.state.user.id\n            })\n          }).then(response => {\n            return response.json();\n          }).then(count => {\n            this.setState(Object.assign(this.state.user, {\n              entries: count\n            }));\n          });\n        }\n\n        this.displayFaceBox(this.calculateFaceLocation(response));\n      }).catch(error => console.log(\"error\", error));\n    };\n\n    this.onRouteChange = route => {\n      this.setState({\n        route: route\n      });\n    };\n\n    this.state = initialState;\n  }\n\n  render() {\n    const {\n      name,\n      entries\n    } = this.state.user;\n    const {\n      box,\n      input,\n      route\n    } = this.state;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"App\",\n      children: route === 'home' ? /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(Navigation, {\n          onRouteChange: this.onRouteChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 115,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(Logo, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 116,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(Rank, {\n          name: this.state.user.name,\n          entries: this.state.user.entries\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 117,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(ImageLinkForm, {\n          onInputChange: this.onInputChange,\n          onButtonSubmit: this.onButtonSubmit\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 118,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(FaceRecognition, {\n          box: box,\n          imageUrl: input\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 121,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 13\n      }, this) : route === 'login' ? /*#__PURE__*/_jsxDEV(Login, {\n        loadUser: this.loadUser,\n        onRouteChange: this.onRouteChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 127,\n        columnNumber: 15\n      }, this) : /*#__PURE__*/_jsxDEV(Register, {\n        loadUser: this.loadUser,\n        onRouteChange: this.onRouteChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 128,\n        columnNumber: 15\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nexport default App;","map":{"version":3,"names":["React","Component","Navigation","Login","Register","Logo","ImageLinkForm","Rank","FaceRecognition","App","constructor","loadUser","data","setState","user","id","name","email","entries","joined","calculateFaceLocation","faces","image","document","getElementById","width","Number","height","i","JSON","parse","outputs","regions","length","clarifaiFace","region_info","bounding_box","push","leftCol","left_col","topRow","top_row","rightCol","right_col","bottomRow","bottom_row","displayFaceBox","box","onInputChange","event","input","target","value","onButtonSubmit","raw","stringify","state","requestOptions","method","headers","Accept","Authorization","body","fetch","then","response","text","json","count","Object","assign","catch","error","console","log","onRouteChange","route","initialState","render"],"sources":["C:/Users/binel/OneDrive/Desktop/iProfiler/src/App.js"],"sourcesContent":["import React, { Component } from 'react';\nimport Navigation from './components/Navigation/Navigation';\nimport Login from './components/Login/Login';\nimport Register from './components/Register/Register';\nimport Logo from './components/Logo/Logo';\nimport ImageLinkForm from './components/ImageLinkForm/ImageLinkForm';\nimport Rank from './components/Rank/Rank';\nimport FaceRecognition from './components/FaceRecognition/FaceRecognition';\nimport './App.css';\n\n\nclass App extends Component {\n  \n\n  constructor() {\n    super();\n    this.state = initialState\n  }\n\n  loadUser = (data) => {\n    this.setState({user: {\n      id: data.id,\n      name: data.name,\n      email: data.email,\n      entries: data.entries,\n      joined: data.joined\n    }})\n  };\n\n  calculateFaceLocation = (data) => {\n    const faces = [];\n    const image = document.getElementById(\"inputimage\");\n    const width = Number(image.width);\n    const height = Number(image.height);\n\n    for (let i = 0; i < JSON.parse(data).outputs[0].data.regions.length; i++) {\n    const clarifaiFace = JSON.parse(data).outputs[0].data.regions[i].region_info.bounding_box;\n    faces.push({\n      leftCol: clarifaiFace.left_col * width,\n      topRow: clarifaiFace.top_row * height,\n      rightCol: width - (clarifaiFace.right_col * width),\n      bottomRow: height - (clarifaiFace.bottom_row * height)\n    });\n  }\n  return faces;\n}\n\n  displayFaceBox = (box) => {\n    this.setState({box: box}); \n  }\n\n  //input property of the app\n  onInputChange = (event) => {\n    this.setState({input: event.target.value});\n  }\n\n  onButtonSubmit = () => {\n    const raw = JSON.stringify({\n      \"user_app_id\": {\n        \"user_id\": \"binray\",\n        \"app_id\": \"iProfiler\"\n      },\n      \"inputs\": [\n        {\n          \"data\": {\n            \"image\": {\n              \"url\": this.state.input\n            }\n          }\n        }\n      ]\n    });\n\n    const requestOptions = {\n          method: \"POST\",\n          headers: {\n            Accept: \"application/json\",\n            Authorization: 'Key a13ffff405e243a99bde0d98a85e6170'\n          },\n          body:raw,\n        };\n    fetch(\"https://api.clarifai.com/v2/models/face-detection/versions/45fb9a671625463fa646c3523a3087d5/outputs\", requestOptions)\n      .then(response => response.text())\n      .then(response => {\n        if (response) {\n          fetch('http://localhost:3000/image', {\n            method: 'PUT',\n            headers: {'Content-Type': 'application/json'},\n            body: JSON.stringify({\n              \"id\": this.state.user.id\n            })\n          })\n          .then(response => { return response.json() })\n          .then(count => {\n            this.setState(Object.assign(this.state.user, {entries: count}));\n          });\n        }\n        this.displayFaceBox(this.calculateFaceLocation(response));\n      })\n      .catch(error => console.log(\"error\", error));\n  };\n\n  onRouteChange = (route) => {\n    this.setState({route: route});\n  }\n\n  render() {\n    const { name, entries } = this.state.user;\n    const { box, input, route } = this.state;\n    return (\n      <div className=\"App\">\n        \n        { route === 'home' \n          ? <div>\n              <Navigation onRouteChange={this.onRouteChange}/>\n              <Logo />\n              <Rank name={this.state.user.name} entries={this.state.user.entries}/>\n              <ImageLinkForm \n              onInputChange = {this.onInputChange}\n              onButtonSubmit = {this.onButtonSubmit}/>\n              <FaceRecognition \n              box= {box} \n              imageUrl = {input}/>\n            </div>\n          : (\n            route === 'login'\n            ? <Login loadUser={this.loadUser} onRouteChange={this.onRouteChange}/>\n            : <Register loadUser={this.loadUser} onRouteChange={this.onRouteChange}/>\n          )\n        }\n      </div>\n    );\n  }\n}\n\nexport default App;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}