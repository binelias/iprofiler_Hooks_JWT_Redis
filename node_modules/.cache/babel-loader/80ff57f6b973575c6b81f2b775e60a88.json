{"ast":null,"code":"\"use strict\";\n/**\n * @license\n * Copyright 2018 gRPC authors.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n *\n */\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nconst fs = require(\"fs\");\n\nconst path = require(\"path\");\n\nconst Protobuf = require(\"protobufjs\");\n\nfunction addIncludePathResolver(root, includePaths) {\n  const originalResolvePath = root.resolvePath;\n\n  root.resolvePath = (origin, target) => {\n    if (path.isAbsolute(target)) {\n      return target;\n    }\n\n    for (const directory of includePaths) {\n      const fullPath = path.join(directory, target);\n\n      try {\n        fs.accessSync(fullPath, fs.constants.R_OK);\n        return fullPath;\n      } catch (err) {\n        continue;\n      }\n    }\n\n    process.emitWarning(`${target} not found in any of the include paths ${includePaths}`);\n    return originalResolvePath(origin, target);\n  };\n}\n\nasync function loadProtosWithOptions(filename, options) {\n  const root = new Protobuf.Root();\n  options = options || {};\n\n  if (!!options.includeDirs) {\n    if (!Array.isArray(options.includeDirs)) {\n      return Promise.reject(new Error('The includeDirs option must be an array'));\n    }\n\n    addIncludePathResolver(root, options.includeDirs);\n  }\n\n  const loadedRoot = await root.load(filename, options);\n  loadedRoot.resolveAll();\n  return loadedRoot;\n}\n\nexports.loadProtosWithOptions = loadProtosWithOptions;\n\nfunction loadProtosWithOptionsSync(filename, options) {\n  const root = new Protobuf.Root();\n  options = options || {};\n\n  if (!!options.includeDirs) {\n    if (!Array.isArray(options.includeDirs)) {\n      throw new Error('The includeDirs option must be an array');\n    }\n\n    addIncludePathResolver(root, options.includeDirs);\n  }\n\n  const loadedRoot = root.loadSync(filename, options);\n  loadedRoot.resolveAll();\n  return loadedRoot;\n}\n\nexports.loadProtosWithOptionsSync = loadProtosWithOptionsSync;\n/**\n * Load Google's well-known proto files that aren't exposed by Protobuf.js.\n */\n\nfunction addCommonProtos() {\n  // Protobuf.js exposes: any, duration, empty, field_mask, struct, timestamp,\n  // and wrappers. compiler/plugin is excluded in Protobuf.js and here.\n  // Using constant strings for compatibility with tools like Webpack\n  const apiDescriptor = require('protobufjs/google/protobuf/api.json');\n\n  const descriptorDescriptor = require('protobufjs/google/protobuf/descriptor.json');\n\n  const sourceContextDescriptor = require('protobufjs/google/protobuf/source_context.json');\n\n  const typeDescriptor = require('protobufjs/google/protobuf/type.json');\n\n  Protobuf.common('api', apiDescriptor.nested.google.nested.protobuf.nested);\n  Protobuf.common('descriptor', descriptorDescriptor.nested.google.nested.protobuf.nested);\n  Protobuf.common('source_context', sourceContextDescriptor.nested.google.nested.protobuf.nested);\n  Protobuf.common('type', typeDescriptor.nested.google.nested.protobuf.nested);\n}\n\nexports.addCommonProtos = addCommonProtos;","map":{"version":3,"names":["Object","defineProperty","exports","value","fs","require","path","Protobuf","addIncludePathResolver","root","includePaths","originalResolvePath","resolvePath","origin","target","isAbsolute","directory","fullPath","join","accessSync","constants","R_OK","err","process","emitWarning","loadProtosWithOptions","filename","options","Root","includeDirs","Array","isArray","Promise","reject","Error","loadedRoot","load","resolveAll","loadProtosWithOptionsSync","loadSync","addCommonProtos","apiDescriptor","descriptorDescriptor","sourceContextDescriptor","typeDescriptor","common","nested","google","protobuf"],"sources":["C:/Users/binel/OneDrive/Desktop/Today/Udemy/iProfiler/iProfiler/iprofiler/node_modules/@grpc/grpc-js/node_modules/@grpc/proto-loader/build/src/util.js"],"sourcesContent":["\"use strict\";\n/**\n * @license\n * Copyright 2018 gRPC authors.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n *\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst fs = require(\"fs\");\nconst path = require(\"path\");\nconst Protobuf = require(\"protobufjs\");\nfunction addIncludePathResolver(root, includePaths) {\n    const originalResolvePath = root.resolvePath;\n    root.resolvePath = (origin, target) => {\n        if (path.isAbsolute(target)) {\n            return target;\n        }\n        for (const directory of includePaths) {\n            const fullPath = path.join(directory, target);\n            try {\n                fs.accessSync(fullPath, fs.constants.R_OK);\n                return fullPath;\n            }\n            catch (err) {\n                continue;\n            }\n        }\n        process.emitWarning(`${target} not found in any of the include paths ${includePaths}`);\n        return originalResolvePath(origin, target);\n    };\n}\nasync function loadProtosWithOptions(filename, options) {\n    const root = new Protobuf.Root();\n    options = options || {};\n    if (!!options.includeDirs) {\n        if (!Array.isArray(options.includeDirs)) {\n            return Promise.reject(new Error('The includeDirs option must be an array'));\n        }\n        addIncludePathResolver(root, options.includeDirs);\n    }\n    const loadedRoot = await root.load(filename, options);\n    loadedRoot.resolveAll();\n    return loadedRoot;\n}\nexports.loadProtosWithOptions = loadProtosWithOptions;\nfunction loadProtosWithOptionsSync(filename, options) {\n    const root = new Protobuf.Root();\n    options = options || {};\n    if (!!options.includeDirs) {\n        if (!Array.isArray(options.includeDirs)) {\n            throw new Error('The includeDirs option must be an array');\n        }\n        addIncludePathResolver(root, options.includeDirs);\n    }\n    const loadedRoot = root.loadSync(filename, options);\n    loadedRoot.resolveAll();\n    return loadedRoot;\n}\nexports.loadProtosWithOptionsSync = loadProtosWithOptionsSync;\n/**\n * Load Google's well-known proto files that aren't exposed by Protobuf.js.\n */\nfunction addCommonProtos() {\n    // Protobuf.js exposes: any, duration, empty, field_mask, struct, timestamp,\n    // and wrappers. compiler/plugin is excluded in Protobuf.js and here.\n    // Using constant strings for compatibility with tools like Webpack\n    const apiDescriptor = require('protobufjs/google/protobuf/api.json');\n    const descriptorDescriptor = require('protobufjs/google/protobuf/descriptor.json');\n    const sourceContextDescriptor = require('protobufjs/google/protobuf/source_context.json');\n    const typeDescriptor = require('protobufjs/google/protobuf/type.json');\n    Protobuf.common('api', apiDescriptor.nested.google.nested.protobuf.nested);\n    Protobuf.common('descriptor', descriptorDescriptor.nested.google.nested.protobuf.nested);\n    Protobuf.common('source_context', sourceContextDescriptor.nested.google.nested.protobuf.nested);\n    Protobuf.common('type', typeDescriptor.nested.google.nested.protobuf.nested);\n}\nexports.addCommonProtos = addCommonProtos;\n//# sourceMappingURL=util.js.map"],"mappings":"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"},"metadata":{},"sourceType":"script"}