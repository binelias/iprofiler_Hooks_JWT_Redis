{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\binel\\\\OneDrive\\\\Desktop\\\\iProfiler_NodeJSGRPC\\\\src\\\\App.js\";\nimport React, { Component } from 'react';\nimport Navigation from './components/Navigation/Navigation';\nimport Login from './components/Login/Login';\nimport Register from './components/Register/Register';\nimport Logo from './components/Logo/Logo';\nimport ImageLinkForm from './components/ImageLinkForm/ImageLinkForm';\nimport Rank from './components/Rank/Rank';\nimport FaceRecognition from './components/FaceRecognition/FaceRecognition';\nimport './App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst initialState = {\n  input: '',\n  box: [],\n  route: 'login',\n  user: {\n    id: '',\n    name: '',\n    email: '',\n    entries: 0,\n    joined: ''\n  }\n};\n\nclass App extends Component {\n  constructor() {\n    super();\n\n    this.loadUser = data => {\n      this.setState({\n        user: {\n          id: data.id,\n          name: data.name,\n          email: data.email,\n          entries: data.entries,\n          joined: data.joined\n        }\n      });\n    };\n\n    this.calculateFaceLocation = data => {\n      const faces = [];\n      const image = document.getElementById(\"inputimage\");\n      const width = Number(image.width);\n      const height = Number(image.height);\n\n      for (let i = 0; i < data.outputs[0].data.regions.length; i++) {\n        const clarifaiFace = data.outputs[0].data.regions[i].region_info.bounding_box;\n        faces.push({\n          leftCol: clarifaiFace.left_col * width,\n          topRow: clarifaiFace.top_row * height,\n          rightCol: width - clarifaiFace.right_col * width,\n          bottomRow: height - clarifaiFace.bottom_row * height\n        });\n      }\n\n      return faces;\n    };\n\n    this.displayFaceBox = box => {\n      this.setState({\n        box: box\n      });\n    };\n\n    this.onInputChange = event => {\n      this.setState({\n        input: event.target.value\n      });\n    };\n\n    this.onButtonSubmit = () => {\n      fetch('http://localhost:3000/imageurl/', {\n        method: 'post',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          input: this.state.input\n        })\n      }).then(response => response.json()).then(response => {\n        if (response) {\n          fetch('http://localhost:3000/image', {\n            method: 'put',\n            headers: {\n              'Content-Type': 'application/json'\n            },\n            body: JSON.stringify({\n              id: this.state.user.id\n            })\n          }).then(response => response.json()).then(count => {\n            this.setState(Object.assign(this.state.user, {\n              entries: count\n            }));\n          });\n        }\n\n        this.displayFaceBox(this.calculateFaceLocation(response));\n      }).catch(error => console.log(\"error\", error));\n    };\n\n    this.onRouteChange = route => {\n      if (route === 'logout') {\n        this.setState(initialState);\n      } else {\n        this.setState({\n          route: route\n        });\n      }\n    };\n\n    this.state = initialState;\n  }\n\n  render() {\n    const {\n      name,\n      entries\n    } = this.state.user;\n    const {\n      box,\n      input,\n      route\n    } = this.state;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"App\",\n      children: route === 'home' ? /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(Navigation, {\n          onRouteChange: this.onRouteChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 112,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(Logo, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 113,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(Rank, {\n          name: name,\n          entries: entries\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 114,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(ImageLinkForm, {\n          onInputChange: this.onInputChange,\n          onButtonSubmit: this.onButtonSubmit\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 117,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(FaceRecognition, {\n          box: box,\n          imageUrl: input\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 120,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 13\n      }, this) : route === 'login' ? /*#__PURE__*/_jsxDEV(Login, {\n        loadUser: this.loadUser,\n        onRouteChange: this.onRouteChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 126,\n        columnNumber: 15\n      }, this) : /*#__PURE__*/_jsxDEV(Register, {\n        loadUser: this.loadUser,\n        onRouteChange: this.onRouteChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 127,\n        columnNumber: 15\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nexport default App;","map":{"version":3,"names":["React","Component","Navigation","Login","Register","Logo","ImageLinkForm","Rank","FaceRecognition","initialState","input","box","route","user","id","name","email","entries","joined","App","constructor","loadUser","data","setState","calculateFaceLocation","faces","image","document","getElementById","width","Number","height","i","outputs","regions","length","clarifaiFace","region_info","bounding_box","push","leftCol","left_col","topRow","top_row","rightCol","right_col","bottomRow","bottom_row","displayFaceBox","onInputChange","event","target","value","onButtonSubmit","fetch","method","headers","body","JSON","stringify","state","then","response","json","count","Object","assign","catch","error","console","log","onRouteChange","render"],"sources":["C:/Users/binel/OneDrive/Desktop/iProfiler_NodeJSGRPC/src/App.js"],"sourcesContent":["import React, { Component } from 'react';\nimport Navigation from './components/Navigation/Navigation';\nimport Login from './components/Login/Login';\nimport Register from './components/Register/Register';\nimport Logo from './components/Logo/Logo';\nimport ImageLinkForm from './components/ImageLinkForm/ImageLinkForm';\nimport Rank from './components/Rank/Rank';\nimport FaceRecognition from './components/FaceRecognition/FaceRecognition';\nimport './App.css';\n\n\nconst initialState = {\n  input: '',\n  box: [],\n  route: 'login',\n  user: {\n    id: '',\n    name: '',\n    email: '',\n    entries: 0,\n    joined: ''\n  }\n};\n\nclass App extends Component {\n  constructor() {\n    super();\n    this.state = initialState;\n  }\n\n  loadUser = (data) => {\n    this.setState({user: {\n      id: data.id,\n      name: data.name,\n      email: data.email,\n      entries: data.entries,\n      joined: data.joined\n    }})\n  }\n\n  calculateFaceLocation = (data) => {\n    const faces = [];\n    const image = document.getElementById(\"inputimage\");\n    const width = Number(image.width);\n    const height = Number(image.height);\n    for (let i = 0; i < data.outputs[0].data.regions.length; i++) {\n    const clarifaiFace = data.outputs[0].data.regions[i].region_info.bounding_box;\n    faces.push({\n      leftCol: clarifaiFace.left_col * width,\n      topRow: clarifaiFace.top_row * height,\n      rightCol: width - (clarifaiFace.right_col * width),\n      bottomRow: height - (clarifaiFace.bottom_row * height)\n    });\n  }\n  return faces;\n}\n\n  displayFaceBox = (box) => {\n    this.setState({box: box}); \n  }\n\n  //input property of the app\n  onInputChange = (event) => {\n    this.setState({input: event.target.value});\n  }\n\n  onButtonSubmit = () => {\n    fetch('http://localhost:3000/imageurl/', {\n      method: 'post',\n      headers: {'Content-Type': 'application/json'},\n      body: JSON.stringify({\n        input: this.state.input\n      })\n    })\n    \n    .then(response => response.json())\n    .then(response => {\n      if (response) {\n        fetch('http://localhost:3000/image', {\n          method: 'put',\n          headers: {'Content-Type': 'application/json'},\n          body: JSON.stringify({\n            id: this.state.user.id\n          })\n        })\n        .then(response =>  response.json())\n        .then(count => {\n          this.setState(Object.assign(this.state.user, {entries: count}));\n        });\n      }\n      this.displayFaceBox(this.calculateFaceLocation(response));\n    })\n    .catch(error => console.log(\"error\", error));\n  };\n\n  onRouteChange = (route) => {\n    if (route === 'logout') {\n      this.setState(initialState)\n    } else {\n      this.setState({route: route});\n    }\n  }\n\n  render() {\n    const { name, entries } = this.state.user;\n    const { box, input, route } = this.state;\n    return (\n      <div className=\"App\">\n        \n        { route === 'home' \n          ? <div>\n              <Navigation onRouteChange={this.onRouteChange}/>\n              <Logo />\n              <Rank \n              name={name} \n              entries={entries} />\n              <ImageLinkForm \n              onInputChange = {this.onInputChange}\n              onButtonSubmit = {this.onButtonSubmit}/>\n              <FaceRecognition \n              box= {box} \n              imageUrl = {input}/>\n            </div>\n          : (\n            route === 'login'\n            ? <Login loadUser={this.loadUser} onRouteChange={this.onRouteChange}/>\n            : <Register loadUser={this.loadUser} onRouteChange={this.onRouteChange}/>\n          )\n        }\n      </div>\n    );\n  }\n}\n\nexport default App;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}