{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\binel\\\\OneDrive\\\\Desktop\\\\Today\\\\Udemy\\\\iProfiler\\\\iProfiler\\\\iprofiler\\\\src\\\\App.js\";\nimport React, { Component } from 'react';\nimport Navigation from './components/Navigation/Navigation';\nimport Logo from './components/Logo/Logo';\nimport ImageLinkForm from './components/ImageLinkForm/ImageLinkForm';\nimport Rank from './components/Rank/Rank';\nimport FaceRecognition from './components/FaceRecognition/FaceRecognition';\nimport Login from './components/Login/Login';\nimport Register from './components/Register/Register';\nimport './App.css'; // const {ClarifaiStub, grpc} = require(\"clarifai-nodejs-grpc\");\n// const stub = ClarifaiStub.grpc();\n// const metadata = new grpc.Metadata();\n// metadata.set(\"1f5d53f5cca6429a8ebfa96dc7aa6b30\", \"eff5029af1d94eb6aa9e19d10ca7a690\");\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass App extends Component {\n  constructor() {\n    super();\n\n    this.calculateFaceLocation = data => {\n      const clarifaiFace = JSON.parse(data, null, 2).outputs[0].data.regions[0].region_info.bounding_box; // const clarifaiFace = data.outputs[0].data.regions[0].region_info.bounding_box;\n\n      const image = document.getElementById(\"inputimage\");\n      const width = Number(image.width);\n      const height = Number(image.height);\n      return {\n        leftCol: clarifaiFace.left_col * width,\n        topRow: clarifaiFace.top_row * height,\n        rightCol: width - clarifaiFace.right_col * width,\n        bottomRow: height - clarifaiFace.bottom_row * height\n      };\n    };\n\n    this.displayFaceBox = box => {\n      this.setState({\n        box: box\n      });\n    };\n\n    this.onInputChange = event => {\n      this.setState({\n        input: event.target.value\n      });\n    };\n\n    this.onButtonSubmit = () => {\n      const raw = JSON.stringify({\n        user_app_id: {\n          user_id: \"binelias\",\n          app_id: \"dc294004d3844cb5a11a8d0ab6fb252c\"\n        },\n        inputs: [{\n          data: {\n            image: {\n              url: this.state.input\n            }\n          }\n        }]\n      });\n      fetch(\"https://api.clarifai.com/v2/models/53e1df302c079b3db8a0a36033ed2d15/outputs/\", {\n        method: \"POST\",\n        headers: {\n          Accept: \"application/json\",\n          Authorization: \"1f5d53f5cca6429a8ebfa96dc7aa6b30\"\n        },\n        body: raw\n      }).then(response => response.text()).then(result => this.displayFaceBox(this.calculateFaceLocation(result))).catch(err => console.log(\"error\", err));\n    };\n\n    this.onRouteChange = route => {\n      if (route === 'signout') {\n        this.setState({\n          isSignedIn: false\n        });\n      } else {\n        this.setState({\n          isSignedIn: true\n        });\n      }\n\n      this.setState({\n        route: 'home'\n      });\n    };\n\n    this.state = {\n      input: '',\n      imageUrl: '',\n      box: {},\n      route: 'login',\n      isSignedIn: false\n    };\n  } //   stub.PostModelOutputs(\n  //     {\n  //       model_id: \"53e1df302c079b3db8a0a36033ed2d15\",\n  //       inputs: [{data: {image: {url: \"https://samples.clarifai.com/dog2.jpeg\"}}}]\n  //     },\n  //     metadata,\n  //     (err, response) => {\n  //         if (err) {\n  //             console.log(\"Error: \" + err);\n  //             return;\n  //         }\n  //         if (response.status.code !== 10000) {\n  //             console.log(\"Received failed status: \" + response.status.description + \"\\n\" + response.status.details);\n  //             return;\n  //         }\n  //         console.log(\"Predicted concepts, with confidence values:\")\n  //         for (const c of response.outputs[0].data.concepts) {\n  //             console.log(c.name + \": \" + c.value);\n  //         }\n  //     }\n  // );\n\n\n  render() {\n    const {\n      isSignedIn,\n      imageUrl,\n      route,\n      box\n    } = this.state;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"App\",\n      children: [/*#__PURE__*/_jsxDEV(Navigation, {\n        isSignedIn: isSignedIn,\n        onRouteChange: this.onRouteChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 123,\n        columnNumber: 9\n      }, this), route === 'home' ? /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(Logo, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 126,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(Rank, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 127,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(ImageLinkForm, {\n          onInputChange: this.onInputChange,\n          onButtonSubmit: this.onButtonSubmit\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 128,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(FaceRecognition, {\n          box: box,\n          imageUrl: imageUrl\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 132,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 125,\n        columnNumber: 13\n      }, this) : route === 'signin' ? /*#__PURE__*/_jsxDEV(Login, {\n        onRouteChange: this.onRouteChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 139,\n        columnNumber: 15\n      }, this) : /*#__PURE__*/_jsxDEV(Register, {\n        onRouteChange: this.onRouteChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 140,\n        columnNumber: 15\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nexport default App;","map":{"version":3,"names":["React","Component","Navigation","Logo","ImageLinkForm","Rank","FaceRecognition","Login","Register","App","constructor","calculateFaceLocation","data","clarifaiFace","JSON","parse","outputs","regions","region_info","bounding_box","image","document","getElementById","width","Number","height","leftCol","left_col","topRow","top_row","rightCol","right_col","bottomRow","bottom_row","displayFaceBox","box","setState","onInputChange","event","input","target","value","onButtonSubmit","raw","stringify","user_app_id","user_id","app_id","inputs","url","state","fetch","method","headers","Accept","Authorization","body","then","response","text","result","catch","err","console","log","onRouteChange","route","isSignedIn","imageUrl","render"],"sources":["C:/Users/binel/OneDrive/Desktop/Today/Udemy/iProfiler/iProfiler/iprofiler/src/App.js"],"sourcesContent":["import React, { Component } from 'react';\nimport Navigation from './components/Navigation/Navigation';\nimport Logo from './components/Logo/Logo';\nimport ImageLinkForm from './components/ImageLinkForm/ImageLinkForm';\nimport Rank from './components/Rank/Rank';\nimport FaceRecognition from './components/FaceRecognition/FaceRecognition';\nimport Login from './components/Login/Login';\nimport Register from './components/Register/Register';\nimport './App.css';\n\n\n// const {ClarifaiStub, grpc} = require(\"clarifai-nodejs-grpc\");\n\n// const stub = ClarifaiStub.grpc();\n\n// const metadata = new grpc.Metadata();\n// metadata.set(\"1f5d53f5cca6429a8ebfa96dc7aa6b30\", \"eff5029af1d94eb6aa9e19d10ca7a690\");\n\nclass App extends Component {\n  constructor() {\n    super();\n    this.state = {\n      input: '',\n      imageUrl: '',\n      box: {},\n      route: 'login',\n      isSignedIn: false\n    }\n  }\n\n//   stub.PostModelOutputs(\n//     {\n//       model_id: \"53e1df302c079b3db8a0a36033ed2d15\",\n//       inputs: [{data: {image: {url: \"https://samples.clarifai.com/dog2.jpeg\"}}}]\n//     },\n//     metadata,\n//     (err, response) => {\n//         if (err) {\n//             console.log(\"Error: \" + err);\n//             return;\n//         }\n\n//         if (response.status.code !== 10000) {\n//             console.log(\"Received failed status: \" + response.status.description + \"\\n\" + response.status.details);\n//             return;\n//         }\n\n//         console.log(\"Predicted concepts, with confidence values:\")\n//         for (const c of response.outputs[0].data.concepts) {\n//             console.log(c.name + \": \" + c.value);\n//         }\n//     }\n// );\n  calculateFaceLocation = (data) => {\n    const clarifaiFace = JSON.parse(data,null,2).outputs[0].data.regions[0].region_info.bounding_box;\n    // const clarifaiFace = data.outputs[0].data.regions[0].region_info.bounding_box;\n    const image = document.getElementById(\"inputimage\");\n    const width = Number(image.width);\n    const height = Number(image.height);\n    return {\n      leftCol: clarifaiFace.left_col * width,\n      topRow: clarifaiFace.top_row * height,\n      rightCol: width - (clarifaiFace.right_col * width),\n      bottomRow: height - (clarifaiFace.bottom_row * height)\n    };\n  }\n\n  displayFaceBox = (box) => {\n    this.setState({box: box}); \n  }\n\n  //input property of the app\n  onInputChange = (event) => {\n    this.setState({input: event.target.value});\n  }\n\n  onButtonSubmit = () => {\n    const raw = JSON.stringify({\n      user_app_id: {\n        user_id: \"binelias\",\n        app_id: \"dc294004d3844cb5a11a8d0ab6fb252c\"\n      },\n      inputs: [\n        {\n          data: {\n            image: {\n              url: this.state.input\n            },\n          },\n        },\n      ],\n    });\n\n    fetch(\n      \"https://api.clarifai.com/v2/models/53e1df302c079b3db8a0a36033ed2d15/outputs/\",\n        {\n          method: \"POST\",\n          headers: {\n            Accept: \"application/json\",\n            Authorization: \"1f5d53f5cca6429a8ebfa96dc7aa6b30\"\n          },\n          body: raw,\n        }\n      )\n      .then((response) => response.text())\n      .then((result) => this.displayFaceBox(this.calculateFaceLocation(result)))\n      .catch((err) => console.log(\"error\", err));\n  }\n\n  onRouteChange = (route) => {\n    if (route === 'signout') {\n      this.setState({isSignedIn: false})\n    } else {\n      this.setState({isSignedIn: true})\n    }\n    this.setState({route: 'home'});\n  }\n\n  render() {\n    const { isSignedIn, imageUrl, route, box } = this.state;\n    return (\n      <div className=\"App\">\n        <Navigation isSignedIn = {isSignedIn} onRouteChange={this.onRouteChange}/>\n        { route === 'home' \n          ? <div>\n              <Logo />\n              <Rank />\n              <ImageLinkForm \n              onInputChange = {this.onInputChange}\n              onButtonSubmit = {this.onButtonSubmit}\n              />\n              <FaceRecognition \n              box={box} \n              imageUrl = {imageUrl} \n              />\n            </div>\n          : (\n            route === 'signin' \n            ? <Login onRouteChange = {this.onRouteChange} />\n            : <Register onRouteChange = {this.onRouteChange} />\n          )\n        }\n      </div>\n    );\n  }\n}\n\nexport default App;\n"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,UAAP,MAAuB,oCAAvB;AACA,OAAOC,IAAP,MAAiB,wBAAjB;AACA,OAAOC,aAAP,MAA0B,0CAA1B;AACA,OAAOC,IAAP,MAAiB,wBAAjB;AACA,OAAOC,eAAP,MAA4B,8CAA5B;AACA,OAAOC,KAAP,MAAkB,0BAAlB;AACA,OAAOC,QAAP,MAAqB,gCAArB;AACA,OAAO,WAAP,C,CAGA;AAEA;AAEA;AACA;;;;AAEA,MAAMC,GAAN,SAAkBR,SAAlB,CAA4B;EAC1BS,WAAW,GAAG;IACZ;;IADY,KAkCdC,qBAlCc,GAkCWC,IAAD,IAAU;MAChC,MAAMC,YAAY,GAAGC,IAAI,CAACC,KAAL,CAAWH,IAAX,EAAgB,IAAhB,EAAqB,CAArB,EAAwBI,OAAxB,CAAgC,CAAhC,EAAmCJ,IAAnC,CAAwCK,OAAxC,CAAgD,CAAhD,EAAmDC,WAAnD,CAA+DC,YAApF,CADgC,CAEhC;;MACA,MAAMC,KAAK,GAAGC,QAAQ,CAACC,cAAT,CAAwB,YAAxB,CAAd;MACA,MAAMC,KAAK,GAAGC,MAAM,CAACJ,KAAK,CAACG,KAAP,CAApB;MACA,MAAME,MAAM,GAAGD,MAAM,CAACJ,KAAK,CAACK,MAAP,CAArB;MACA,OAAO;QACLC,OAAO,EAAEb,YAAY,CAACc,QAAb,GAAwBJ,KAD5B;QAELK,MAAM,EAAEf,YAAY,CAACgB,OAAb,GAAuBJ,MAF1B;QAGLK,QAAQ,EAAEP,KAAK,GAAIV,YAAY,CAACkB,SAAb,GAAyBR,KAHvC;QAILS,SAAS,EAAEP,MAAM,GAAIZ,YAAY,CAACoB,UAAb,GAA0BR;MAJ1C,CAAP;IAMD,CA9Ca;;IAAA,KAgDdS,cAhDc,GAgDIC,GAAD,IAAS;MACxB,KAAKC,QAAL,CAAc;QAACD,GAAG,EAAEA;MAAN,CAAd;IACD,CAlDa;;IAAA,KAqDdE,aArDc,GAqDGC,KAAD,IAAW;MACzB,KAAKF,QAAL,CAAc;QAACG,KAAK,EAAED,KAAK,CAACE,MAAN,CAAaC;MAArB,CAAd;IACD,CAvDa;;IAAA,KAyDdC,cAzDc,GAyDG,MAAM;MACrB,MAAMC,GAAG,GAAG7B,IAAI,CAAC8B,SAAL,CAAe;QACzBC,WAAW,EAAE;UACXC,OAAO,EAAE,UADE;UAEXC,MAAM,EAAE;QAFG,CADY;QAKzBC,MAAM,EAAE,CACN;UACEpC,IAAI,EAAE;YACJQ,KAAK,EAAE;cACL6B,GAAG,EAAE,KAAKC,KAAL,CAAWX;YADX;UADH;QADR,CADM;MALiB,CAAf,CAAZ;MAgBAY,KAAK,CACH,8EADG,EAED;QACEC,MAAM,EAAE,MADV;QAEEC,OAAO,EAAE;UACPC,MAAM,EAAE,kBADD;UAEPC,aAAa,EAAE;QAFR,CAFX;QAMEC,IAAI,EAAEb;MANR,CAFC,CAAL,CAWGc,IAXH,CAWSC,QAAD,IAAcA,QAAQ,CAACC,IAAT,EAXtB,EAYGF,IAZH,CAYSG,MAAD,IAAY,KAAK1B,cAAL,CAAoB,KAAKvB,qBAAL,CAA2BiD,MAA3B,CAApB,CAZpB,EAaGC,KAbH,CAaUC,GAAD,IAASC,OAAO,CAACC,GAAR,CAAY,OAAZ,EAAqBF,GAArB,CAblB;IAcD,CAxFa;;IAAA,KA0FdG,aA1Fc,GA0FGC,KAAD,IAAW;MACzB,IAAIA,KAAK,KAAK,SAAd,EAAyB;QACvB,KAAK9B,QAAL,CAAc;UAAC+B,UAAU,EAAE;QAAb,CAAd;MACD,CAFD,MAEO;QACL,KAAK/B,QAAL,CAAc;UAAC+B,UAAU,EAAE;QAAb,CAAd;MACD;;MACD,KAAK/B,QAAL,CAAc;QAAC8B,KAAK,EAAE;MAAR,CAAd;IACD,CAjGa;;IAEZ,KAAKhB,KAAL,GAAa;MACXX,KAAK,EAAE,EADI;MAEX6B,QAAQ,EAAE,EAFC;MAGXjC,GAAG,EAAE,EAHM;MAIX+B,KAAK,EAAE,OAJI;MAKXC,UAAU,EAAE;IALD,CAAb;EAOD,CAVyB,CAY5B;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EAEA;EACA;EACA;EACA;EAEA;EACA;EACA;EACA;EACA;EACA;;;EAkEEE,MAAM,GAAG;IACP,MAAM;MAAEF,UAAF;MAAcC,QAAd;MAAwBF,KAAxB;MAA+B/B;IAA/B,IAAuC,KAAKe,KAAlD;IACA,oBACE;MAAK,SAAS,EAAC,KAAf;MAAA,wBACE,QAAC,UAAD;QAAY,UAAU,EAAIiB,UAA1B;QAAsC,aAAa,EAAE,KAAKF;MAA1D;QAAA;QAAA;QAAA;MAAA,QADF,EAEIC,KAAK,KAAK,MAAV,gBACE;QAAA,wBACE,QAAC,IAAD;UAAA;UAAA;UAAA;QAAA,QADF,eAEE,QAAC,IAAD;UAAA;UAAA;UAAA;QAAA,QAFF,eAGE,QAAC,aAAD;UACA,aAAa,EAAI,KAAK7B,aADtB;UAEA,cAAc,EAAI,KAAKK;QAFvB;UAAA;UAAA;UAAA;QAAA,QAHF,eAOE,QAAC,eAAD;UACA,GAAG,EAAEP,GADL;UAEA,QAAQ,EAAIiC;QAFZ;UAAA;UAAA;UAAA;QAAA,QAPF;MAAA;QAAA;QAAA;QAAA;MAAA,QADF,GAcEF,KAAK,KAAK,QAAV,gBACE,QAAC,KAAD;QAAO,aAAa,EAAI,KAAKD;MAA7B;QAAA;QAAA;QAAA;MAAA,QADF,gBAEE,QAAC,QAAD;QAAU,aAAa,EAAI,KAAKA;MAAhC;QAAA;QAAA;QAAA;MAAA,QAlBR;IAAA;MAAA;MAAA;MAAA;IAAA,QADF;EAwBD;;AA9HyB;;AAiI5B,eAAexD,GAAf"},"metadata":{},"sourceType":"module"}